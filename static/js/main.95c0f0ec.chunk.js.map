{"version":3,"sources":["components/Todo.jsx","components/Input.jsx","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","todoList","length","className","map","item","index","complete","onClick","toggleComplete","name","type","aria-label","deleteItem","Input","onSubmit","addItem","id","value","input","onChange","handleChange","required","App","useState","setTodoList","setInput","e","target","preventDefault","newItem","concat","document","getElementById","todoListCopy","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"0MAmCeA,EAlCF,SAACC,GAEZ,OAA8B,IAA1BA,EAAMC,SAASC,OAEf,qBAAKC,UAAU,cAAf,SACE,oBAAIA,UAAU,OAAd,6BAMN,qBAAKA,UAAU,OAAf,SACE,oBAAIA,UAAU,aAAd,SACCH,EAAMC,SAASG,KAAI,SAACC,EAAMC,GACzB,OAAID,EAAKE,SAED,qBAAIJ,UAAU,oEAAd,UACE,sBAAMA,UAAU,YAAYK,QAAS,kBAAMR,EAAMS,eAAeH,IAAhE,SAAwE,8BAAMD,EAAKK,SACnF,wBAAQC,KAAK,SAASR,UAAU,wBAAwBS,aAAW,QAAQJ,QAAS,kBAAMR,EAAMa,WAAWP,IAA3G,sBAFF,eAA+FA,IAM/F,qBAAIH,UAAU,oEAAd,UACE,sBAAMA,UAAU,YAAYK,QAAS,kBAAMR,EAAMS,eAAeH,IAAhE,SAAyED,EAAKK,OAC9E,wBAAQC,KAAK,SAASR,UAAU,wBAAwBS,aAAW,QAAQJ,QAAS,kBAAMR,EAAMa,WAAWP,IAA3G,sBAFF,eAA+FA,YCR9FQ,EAdD,SAACd,GAEX,OACA,8BACE,uBAAMG,UAAU,mBAAmBY,SAAUf,EAAMgB,QAAnD,UACE,uBAAOb,UAAU,wBAAjB,2BACA,uBAAOQ,KAAK,MAAMR,UAAU,eAAec,GAAG,YAAYC,MAAOlB,EAAMmB,MAAOC,SAAUpB,EAAMqB,aAAcC,UAAQ,IACpH,qBAAKnB,UAAU,eAAf,SACE,wBAAQQ,KAAK,SAASR,UAAU,uBAAhC,4BC6CKoB,MAjDf,WAEE,MAAgCC,mBAAS,IAAzC,mBAAOvB,EAAP,KAAiBwB,EAAjB,KACA,EAA0BD,mBAAS,IAAnC,mBAAOL,EAAP,KAAcO,EAAd,KAiCA,OACE,sBAAKvB,UAAU,YAAf,UACE,cAAC,EAAD,CACEF,SAAUA,EACVwB,YAAaA,EACbJ,aAnCe,SAACM,GACpBD,EAASC,EAAEC,OAAOV,QAmCdF,QAhCU,SAACW,GACfA,EAAEE,iBACF,IAAIC,EAAU,CAACpB,KAAMS,EAAOZ,UAAU,GACtCkB,EAAYxB,EAAS8B,OAAOD,IACTE,SAASC,eAAe,aAChCf,MAAQ,GACnBQ,EAAS,OA4BP,cAAC,EAAD,CAAMzB,SAAUA,EAAUQ,eAzBP,SAACH,GACtB,IAAM4B,EAAY,YAAOjC,IACY,IAAjCiC,EAAa5B,GAAOC,UACtB2B,EAAa5B,GAAOC,UAAW,EAC/BkB,EAAYS,KAEZA,EAAa5B,GAAOC,UAAW,EAC/BkB,EAAYS,KAkB8CrB,WAd3C,SAACP,GAClB,IAAM4B,EAAY,YAAOjC,GACzBiC,EAAaC,OAAO7B,EAAO,GAC3BmB,EAAYS,UC1BDE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFf,SAASC,eAAe,SAM1BG,M","file":"static/js/main.95c0f0ec.chunk.js","sourcesContent":["\nconst Todo = (props) => {\n\n  if (props.todoList.length === 0) {\n    return (\n      <div className=\"text-center\">\n        <h1 className=\"mt-5\">No Todo Items</h1>\n      </div>\n    )\n  }\n\n  return (\n  <div className=\"mt-3\">\n    <ul className=\"list-group\">\n    {props.todoList.map((item, index) => {\n      if (item.complete) {\n        return (\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={`todo-${index}`}>\n                <span className=\"display-6\" onClick={() => props.toggleComplete(index)}><del>{item.name}</del></span>\n                <button type=\"button\" className=\"btn btn-danger btn-sm\" aria-label=\"Close\" onClick={() => props.deleteItem(index)}>delete</button>\n              </li>)\n      } else {\n        return (\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={`todo-${index}`}>\n                <span className=\"display-6\" onClick={() => props.toggleComplete(index)}>{item.name}</span>\n                <button type=\"button\" className=\"btn btn-danger btn-sm\" aria-label=\"Close\" onClick={() => props.deleteItem(index)}>delete</button>\n              </li>)\n      }\n        \n      })}\n      </ul>\n  </div>)\n  \n}\n \nexport default Todo;","\nconst Input = (props) => {\n\n    return (\n    <div>\n      <form className=\"mt-5 text-center\" onSubmit={props.addItem}>\n        <label className=\"form-label display-4 \" >Add Todo Item</label>\n        <input type=\"tet\" className=\"form-control\" id=\"textField\" value={props.input} onChange={props.handleChange} required/>\n        <div className=\"d-grid gap-2\">\n          <button type=\"submit\" className=\"btn btn-primary mt-2\" >Submit</button>\n        </div>\n      </form>\n    </div>)\n}\n\nexport default Input;","import { useState } from 'react';\nimport Todo from './components/Todo'\nimport Input from './components/Input'\n\n\nfunction App() {\n\n  const [todoList, setTodoList] = useState([])\n  const [input, setInput] = useState(\"\")\n\n  \n  const handleChange = (e) => {\n    setInput(e.target.value)\n  }\n\n  const addItem = (e) => {\n    e.preventDefault()\n    let newItem = {name: input, complete: false}\n    setTodoList(todoList.concat(newItem))\n    const inputField = document.getElementById(\"textField\")\n    inputField.value = \"\"\n    setInput(\"\")\n  }\n\n  const toggleComplete = (index) => {\n    const todoListCopy = [...todoList]\n    if (todoListCopy[index].complete === false) {\n      todoListCopy[index].complete = true\n      setTodoList(todoListCopy)\n    } else {\n      todoListCopy[index].complete = false\n      setTodoList(todoListCopy)\n    }\n  }\n\n  const deleteItem = (index) => {\n    const todoListCopy = [...todoList]\n    todoListCopy.splice(index, 1)\n    setTodoList(todoListCopy)\n  }\n\n  return (\n    <div className=\"container\">\n      <Input \n        todoList={todoList} \n        setTodoList={setTodoList}\n        handleChange={handleChange}\n        addItem={addItem}\n      />\n      <Todo todoList={todoList} toggleComplete={toggleComplete} deleteItem={deleteItem}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}